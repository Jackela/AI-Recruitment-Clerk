# Logstash管道配置 - AI Recruitment日志处理
input {
  beats {
    port => 5044
  }
}

filter {
  # 时间戳处理
  if [fields][timestamp] {
    date {
      match => [ "[fields][timestamp]", "ISO8601" ]
    }
  }

  # Docker容器日志处理
  if [container] {
    # 提取服务名称
    if [container][name] {
      if [container][name] =~ /ai-recruitment-(.+)/ {
        mutate {
          add_field => { "service" => "%{[container][name]}" }
        }
        mutate {
          gsub => [ "service", "ai-recruitment-", "" ]
        }
      }
    }

    # 解析JSON格式日志
    if [message] =~ /^\{.*\}$/ {
      json {
        source => "message"
      }
    }

    # NestJS日志解析
    if [message] =~ /\[Nest\]/ {
      grok {
        match => { "message" => "\[Nest\]\s+%{NUMBER:pid}\s+-\s+%{TIMESTAMP_ISO8601:timestamp}\s+%{WORD:level}\s+\[%{WORD:context}\]\s+%{GREEDYDATA:log_message}" }
      }
      
      # 级别映射
      mutate {
        lowercase => [ "level" ]
      }
    }

    # 错误堆栈跟踪处理
    if [level] == "error" and [message] =~ /Error:/ {
      mutate {
        add_tag => [ "error", "exception" ]
      }
    }

    # API请求日志解析
    if [message] =~ /\[API\]/ {
      grok {
        match => { 
          "message" => "\[API\]\s+%{WORD:method}\s+%{URIPATH:endpoint}\s+%{NUMBER:status_code}\s+%{NUMBER:response_time}ms"
        }
      }
      mutate {
        convert => { 
          "status_code" => "integer"
          "response_time" => "integer"
        }
        add_tag => [ "api_request" ]
      }
    }

    # 数据库日志解析
    if [service] == "mongodb" {
      grok {
        match => { 
          "message" => "%{TIMESTAMP_ISO8601:timestamp}\s+%{WORD:severity}\s+%{WORD:component}\s+\[%{WORD:context}\]\s+%{GREEDYDATA:mongo_message}"
        }
      }
      mutate {
        add_tag => [ "database", "mongodb" ]
      }
    }

    # NATS日志解析
    if [service] == "nats" {
      grok {
        match => { 
          "message" => "\[%{NUMBER:pid}\]\s+%{TIMESTAMP_ISO8601:timestamp}\s+\[%{WORD:level}\]\s+%{GREEDYDATA:nats_message}"
        }
      }
      mutate {
        add_tag => [ "messaging", "nats" ]
      }
    }
  }

  # 添加索引模式
  mutate {
    add_field => { "[@metadata][index_pattern]" => "ai-recruitment-logs-%{+YYYY.MM.dd}" }
  }

  # IP地址地理位置解析
  if [client_ip] {
    geoip {
      source => "client_ip"
      target => "geoip"
    }
  }

  # 清理和标准化
  mutate {
    remove_field => [ "beat", "prospector", "input", "host", "offset" ]
  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "%{[@metadata][index_pattern]}"
    template_name => "ai-recruitment-logs"
    template => "/usr/share/logstash/templates/ai-recruitment-template.json"
    template_overwrite => true
  }

  # 调试输出 (可删除)
  # stdout { codec => rubydebug }
}