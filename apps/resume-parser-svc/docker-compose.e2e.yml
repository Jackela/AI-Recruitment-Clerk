version: '3.8'

services:
  # MongoDB for test database
  mongodb-test:
    image: mongo:7.0
    container_name: resume-parser-mongodb-test
    ports:
      - "27018:27017"  # Different port to avoid conflicts
    environment:
      MONGO_INITDB_ROOT_USERNAME: testuser
      MONGO_INITDB_ROOT_PASSWORD: testpass
      MONGO_INITDB_DATABASE: resume-parser-test
    volumes:
      - /dev/null:/data/db  # Use tmpfs for in-memory storage
    tmpfs:
      - /data/db:size=512M
    command: mongod --quiet --logpath /dev/null
    networks:
      - test-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  # NATS JetStream for message queue testing
  nats-test:
    image: nats:2.10-alpine
    container_name: resume-parser-nats-test
    ports:
      - "4223:4222"  # Different port to avoid conflicts
      - "8223:8222"  # Monitoring port
    command: [
      "-js",                    # Enable JetStream
      "-sd", "/data",          # Store directory
      "-m", "8222",            # Monitoring port
      "-n", "test-cluster",    # Cluster name
      "--user", "testuser",    # Test user
      "--pass", "testpass"     # Test password
    ]
    volumes:
      - /dev/null:/data  # Use tmpfs for in-memory storage
    tmpfs:
      - /data:size=256M
    networks:
      - test-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8222/healthz"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  # Redis for caching (optional, for complete test coverage)
  redis-test:
    image: redis:7-alpine
    container_name: resume-parser-redis-test
    ports:
      - "6380:6379"  # Different port to avoid conflicts
    command: redis-server --save "" --appendonly no --loglevel warning
    networks:
      - test-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

networks:
  test-network:
    driver: bridge
    name: resume-parser-test-network

# Volumes are not needed as we're using tmpfs for in-memory storage