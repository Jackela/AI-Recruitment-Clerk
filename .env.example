# AI Recruitment Clerk Environment Configuration

# ===========================================
# AUTHENTICATION & SECURITY
# ===========================================

# JWT Configuration
JWT_SECRET=YOUR_JWT_SECRET_KEY_HERE_MINIMUM_32_CHARACTERS_REQUIRED
JWT_REFRESH_SECRET=YOUR_JWT_REFRESH_SECRET_KEY_HERE_MINIMUM_32_CHARACTERS_REQUIRED
JWT_EXPIRES_IN=1h
JWT_REFRESH_EXPIRES_IN=7d
JWT_EXPIRES_IN_SECONDS=3600

# Data Encryption (AES-256-GCM)
# CRITICAL: Generate a secure 64-character hex key for production
# Use: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
ENCRYPTION_MASTER_KEY=YOUR_64_CHARACTER_HEX_ENCRYPTION_KEY_HERE_REQUIRED_FOR_AES256

# ===========================================
# DATABASE CONFIGURATION
# ===========================================

# MongoDB Configuration
MONGODB_URL=mongodb://username:password@localhost:27017/ai-recruitment?authSource=admin
MONGO_URL=mongodb://username:password@localhost:27017/ai-recruitment?authSource=admin
MONGODB_ROOT_PASSWORD=YOUR_MONGODB_PASSWORD_HERE
MONGODB_DATABASE=ai-recruitment

# ===========================================
# MESSAGE QUEUE
# ===========================================

# NATS Configuration
NATS_URL=nats://localhost:4222
NATS_CLUSTER_ID=ai-recruitment-cluster
NATS_CLIENT_ID=ai-recruitment-client

# ===========================================
# EXTERNAL API SERVICES
# ===========================================

# Google Gemini API (Required for resume parsing and JD extraction)
GEMINI_API_KEY=YOUR_GEMINI_API_KEY_HERE

# OpenAI Embedding API (Semantic Cache)
OPENAI_API_KEY=YOUR_OPENAI_API_KEY_HERE
OPENAI_EMBEDDING_MODEL=text-embedding-3-small
OPENAI_EMBEDDING_API_URL=https://api.openai.com/v1/embeddings
OPENAI_EMBEDDING_TIMEOUT_MS=10000
OPENAI_EMBEDDING_MAX_RETRIES=3
OPENAI_EMBEDDING_RETRY_DELAY_MS=250

# ===========================================
# APPLICATION CONFIGURATION
# ===========================================

# Environment
NODE_ENV=development

# Server Configuration
PORT=3000
API_PREFIX=api

# CORS Configuration
CORS_ORIGIN=http://localhost:4200,http://localhost:4202
CORS_CREDENTIALS=true

# File Upload Configuration
MAX_FILE_SIZE=10485760
MAX_FILES_PER_UPLOAD=10
UPLOAD_DIR=./uploads
ALLOWED_FILE_TYPES=.pdf,.doc,.docx

# ===========================================
# LOGGING & MONITORING
# ===========================================

# Logging Configuration
LOG_LEVEL=info
LOG_FORMAT=json

# Monitoring
ENABLE_METRICS=true
METRICS_PORT=9090

# ===========================================
# RATE LIMITING & SECURITY
# ===========================================

# Rate Limiting
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# Security Headers
ENABLE_HELMET=true
ENABLE_CSRF=false

# ===========================================
# FEATURE FLAGS
# ===========================================

# Feature Toggles
ENABLE_EMAIL_NOTIFICATIONS=false
ENABLE_AUDIT_LOGGING=true
ENABLE_PERFORMANCE_MONITORING=true

# ===========================================
# DEVELOPMENT SETTINGS
# ===========================================

# Development Mode Settings (do not use in production)
ENABLE_SWAGGER=true
ENABLE_DEBUG_ROUTES=false
MOCK_EXTERNAL_SERVICES=false

# ===========================================
# CACHE CONFIGURATION
# ===========================================

# Redis Cache (optional - falls back to memory cache if disabled)
# REDIS_URL=redis://localhost:6379
USE_REDIS_CACHE=false
DISABLE_REDIS=true
CACHE_TTL=300
CACHE_MAX_ITEMS=1000
SEMANTIC_CACHE_ENABLED=true
SEMANTIC_CACHE_SIMILARITY_THRESHOLD=0.92
SEMANTIC_CACHE_TTL_MS=86400000
SEMANTIC_CACHE_MAX_RESULTS=5
SEMANTIC_CACHE_INDEX_NAME=idx:semantic_cache
SEMANTIC_CACHE_KEY_PREFIX=semantic:cache:
SEMANTIC_CACHE_VECTOR_FIELD=embedding
SEMANTIC_CACHE_VECTOR_DIMS=1536
SEMANTIC_CACHE_DISTANCE_METRIC=COSINE

# ===========================================
# PRODUCTION OVERRIDES
# ===========================================

# Production-specific settings
# REDIS_URL=redis://localhost:6379
# ELASTICSEARCH_URL=http://localhost:9200
# SENTRY_DSN=your_sentry_dsn_here
# DATADOG_API_KEY=your_datadog_api_key_here
